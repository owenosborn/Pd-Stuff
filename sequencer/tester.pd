#N canvas 310 45 900 755 10;
#X obj 239 402 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 254 1;
#X obj 336 394 vsl 15 128 1 20 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X floatatom 336 543 5 0 0 0 - - -, f 5;
#X floatatom 719 168 5 0 0 0 - - -, f 5;
#X floatatom 239 547 5 0 0 0 - - -, f 5;
#X msg 719 138 4;
#X obj 719 106 loadbang;
#N canvas 373 120 415 596 metronome 0;
#X obj 68 226 snapshot~;
#X obj 94 191 bang~;
#X obj 81 274 i;
#X obj 68 323 change;
#X floatatom 68 130 5 0 0 0 - - -, f 5;
#X floatatom 63 71 5 0 350 0 - - -, f 5;
#X obj 64 100 / 60;
#X msg 132 61 0;
#X obj 117 20 loadbang;
#X obj 68 158 phasor~ 1;
#X msg 93 50 60;
#X obj 48 19 inlet;
#X obj 81 252 * 100;
#X obj 81 296 / 100;
#X obj 65 378 outlet;
#X text 124 279 divide clock into steps;
#X connect 0 0 12 0;
#X connect 1 0 0 0;
#X connect 2 0 13 0;
#X connect 3 0 14 0;
#X connect 4 0 9 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 9 1;
#X connect 8 0 7 0;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 2 0;
#X connect 13 0 3 0;
#X restore 73 75 pd metronome;
#X obj 139 426 r beat-clock;
#X floatatom 139 448 5 0 0 0 - - -, f 5;
#X obj 434 112 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 301 130 r beat-clock;
#X obj 432 48 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 433 69 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 433 89 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 454 69 start;
#X text 454 47 stop;
#X text 456 89 start on next beat;
#X text 457 112 loop;
#X floatatom 67 43 5 0 0 0 - - -, f 5;
#X obj 301 165 t f f;
#N canvas 134 67 1066 704 sequence-read 0;
#X obj 489 371 list split 1;
#X obj 551 542 list, f 5;
#X obj 548 571 list trim;
#X floatatom 262 241 5 0 0 0 - - -, f 5;
#X obj 462 433 >=;
#X obj 479 468 sel 1;
#X obj 479 495 t b b;
#X obj 420 378 spigot;
#X obj 443 100 t b b b;
#X msg 315 221 1;
#X obj 160 82 inlet;
#X text 202 82 sequence clock;
#X obj 453 539 s \$0-get-next;
#X obj 318 130 r \$0-get-next;
#X obj 448 46 inlet;
#X text 495 47 rewind;
#X obj 549 610 outlet;
#X msg 521 295 0;
#X text 535 416 wait until sequcned clock advances then send out event
and get next., f 26;
#X obj 431 235 text get seq-1 -1;
#X obj 524 269 sel 2;
#N canvas 80 99 660 336 count-up 0;
#X obj 202 141 + 1;
#X msg 230 99 0;
#X obj 125 47 inlet;
#X obj 163 194 outlet;
#X obj 303 37 inlet;
#X text 348 38 reset;
#X text 211 196 count;
#X obj 168 144 i 0;
#X text 171 44 inc;
#X connect 0 0 7 1;
#X connect 1 0 7 1;
#X connect 2 0 7 0;
#X connect 4 0 1 0;
#X connect 7 0 3 0;
#X connect 7 0 0 0;
#X restore 432 204 pd count-up;
#X connect 0 0 4 1;
#X connect 0 1 1 1;
#X connect 1 0 2 0;
#X connect 2 0 16 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 12 0;
#X connect 6 1 1 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 21 0;
#X connect 8 2 21 1;
#X connect 9 0 7 1;
#X connect 10 0 3 0;
#X connect 13 0 21 0;
#X connect 14 0 8 0;
#X connect 17 0 7 1;
#X connect 19 0 0 0;
#X connect 19 1 20 0;
#X connect 20 0 17 0;
#X connect 21 0 19 0;
#X restore 387 326 pd sequence-read;
#X obj 263 580 -;
#X floatatom 264 615 50 0 0 0 - - -, f 50;
#X msg 118 51 0;
#X msg 162 43 60;
#N canvas 0 22 992 609 seq-clocker 0;
#N canvas 0 22 1241 632 clock-control 0;
#X obj 15 63 inlet;
#X obj 297 57 inlet;
#X obj 400 57 inlet;
#X obj 188 432 outlet;
#X obj 516 55 inlet;
#X text 343 58 stop;
#X text 446 58 start;
#X obj 403 442 outlet;
#X text 248 433 beat clock out;
#X text 558 57 start on next beat;
#X obj 695 58 inlet;
#X text 742 57 loop ctrl;
#X obj 836 58 inlet;
#X text 57 60 beat clock in;
#X obj 298 98 bang;
#X obj 398 89 bang;
#X obj 516 85 bang;
#X msg 299 124 0;
#X obj 414 124 t b b;
#X obj 423 322 t b b;
#N canvas 501 273 450 300 wait-for-next-beat 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 386 297 pd wait-for-next-beat;
#X msg 467 360 1;
#X msg 445 156 1;
#X obj 773 437 outlet;
#X text 833 436 spigot control;
#X obj 748 234 spigot 1;
#X obj 798 184 ==;
#X obj 756 271 bang;
#X msg 757 297 0;
#X text 813 234 if loop off \, shut off seq clock output at end;
#X text 883 56 seq end in;
#X text 460 443 seq clock start;
#X obj 40 98 t f f;
#X obj 169 179 <;
#X obj 169 205 sel 1;
#X obj 172 144 t f f;
#X text 212 187 bang on next rollover \, top of beat;
#X connect 0 0 32 0;
#X connect 1 0 14 0;
#X connect 2 0 15 0;
#X connect 4 0 16 0;
#X connect 10 0 26 0;
#X connect 12 0 25 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 20 1;
#X connect 17 0 23 0;
#X connect 18 0 7 0;
#X connect 18 1 22 0;
#X connect 19 0 7 0;
#X connect 19 1 21 0;
#X connect 20 0 19 0;
#X connect 21 0 23 0;
#X connect 22 0 23 0;
#X connect 25 0 27 0;
#X connect 26 0 25 1;
#X connect 27 0 28 0;
#X connect 28 0 23 0;
#X connect 32 0 3 0;
#X connect 32 1 35 0;
#X connect 33 0 34 0;
#X connect 34 0 20 0;
#X connect 35 0 33 1;
#X connect 35 1 33 0;
#X restore 211 199 pd clock-control;
#X obj 457 97 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 284 22 start;
#X text 347 19 start on next beat;
#X text 531 23 loop;
#X obj 236 342 spigot;
#N canvas 220 23 1124 809 clocker 0;
#X obj 312 332 wrap;
#X floatatom 339 413 5 0 0 0 - - -, f 5;
#X obj 458 134 t b b;
#X obj 453 82 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 936 330 5 0 0 0 - - -, f 5;
#X obj 312 310 - 0;
#X obj 314 215 f;
#X obj 312 355 t f f;
#X obj 273 690 outlet;
#X obj 271 608 + 1;
#X obj 453 53 inlet;
#X obj 993 50 inlet;
#X text 1040 51 length;
#X obj 290 58 inlet;
#X obj 352 688 outlet;
#X text 89 314 derive an internal beat clock from the master by offsetting
phase., f 34;
#X text 392 538 bang at end;
#X obj 332 506 >= 4;
#X obj 312 438 + 0;
#X text 47 609 send out seq clock. for the last value send out 1 cause
if looping this would be where it wraps around., f 33;
#N canvas 0 22 450 300 wait-for-next-tick 0;
#X obj 109 71 inlet;
#X obj 211 67 inlet;
#X obj 118 215 outlet;
#X obj 114 137 == 1;
#X obj 114 115 i 0;
#X obj 114 162 sel 1;
#X obj 114 184 t b b;
#X msg 166 152 0;
#X msg 203 92 1;
#X connect 0 0 4 0;
#X connect 1 0 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X connect 8 0 4 1;
#X restore 313 176 pd wait-for-next-tick;
#X text 503 50 start;
#X obj 517 165 t b b;
#X obj 340 536 sel 1 0;
#X obj 290 572 f;
#X obj 312 467 t f f;
#X msg 319 611 1;
#X obj 402 665 s \$0-loop;
#X obj 515 137 r \$0-loop;
#X obj 473 618 f;
#X obj 473 643 - 4;
#X obj 347 248 f;
#X obj 347 281 - 0;
#X obj 345 573 t b b b b;
#X obj 291 106 t f b f f;
#N canvas 80 99 660 336 count-beats 0;
#X obj 175 216 + 1;
#X msg 230 99 0;
#X obj 126 152 <;
#X obj 126 178 sel 1;
#X obj 129 117 t f f;
#X obj 141 219 i 1;
#X text 225 151 when current value is lees than previous value the
phasor rolled over and we increment the beat count.;
#X obj 125 47 inlet;
#X obj 136 269 outlet;
#X obj 303 37 inlet;
#X text 171 44 beat clock in;
#X text 348 38 reset;
#X text 184 271 count;
#X connect 0 0 5 1;
#X connect 1 0 2 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 1;
#X connect 4 1 2 0;
#X connect 5 0 0 0;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 9 0 1 0;
#X restore 339 387 pd count-beats;
#X text 443 366 when phasor is reset from a start condition or rollover
\, reset beat counter., f 25;
#X text 335 61 beat clock;
#X obj 473 669 s \$0-overshoot;
#X obj 385 245 r \$0-overshoot;
#X text 87 461 add beat count to beat phase;
#X text 509 244 subtract the overshoot amount from below (the amount
the sequence clock advanced beyond the sequence length);
#X text 555 59 when we start the sequence we want the first output
to be 1 (top of first beat) \, so we wait for next tick.;
#X text 175 701 seq clock out;
#X text 432 704 bang at end of sequence. this gets sent out before
the seq clock. since the sequence clock just loops \, this is useful
for shutting off the output externally (spigot) if you just want a
seuqnce to play once;
#X floatatom 573 670 10 0 0 0 - - -, f 10;
#X text 28 55 this patch takes a 0-1 beat phase clock input and outputs
a sequence clock of arbitrary length that is syncrhonized to the input
clock., f 38;
#X text 29 159 it corrects for overshoot when the clock doesn't exactly
equal the length., f 38;
#X text 593 145 on loop \, the last value (equal to sequence length)
is acutally the top of the next loop \, so we use the previous beat
phase value as the offset.;
#X text 560 597 we can't depend on the sequence clock (which is based
on the input beat phasor) being exactly equal to the sequence length.
so if it advances past the sequence length \, subtract this overshoot
on the next loop to keep everything in sync.;
#X text 29 119 the sequence clock goes from 1 to len+1 and loops continuously
, f 38;
#X connect 0 0 7 0;
#X connect 1 0 18 1;
#X connect 2 0 20 1;
#X connect 2 1 35 1;
#X connect 3 0 2 0;
#X connect 4 0 17 1;
#X connect 4 0 30 1;
#X connect 5 0 0 0;
#X connect 6 0 5 1;
#X connect 7 0 18 0;
#X connect 7 1 35 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 11 0 4 0;
#X connect 13 0 34 0;
#X connect 17 0 23 0;
#X connect 18 0 25 0;
#X connect 20 0 6 0;
#X connect 22 0 31 0;
#X connect 22 1 35 1;
#X connect 23 0 33 0;
#X connect 23 1 24 0;
#X connect 24 0 9 0;
#X connect 25 0 17 0;
#X connect 25 1 24 1;
#X connect 25 1 29 1;
#X connect 26 0 8 0;
#X connect 28 0 22 0;
#X connect 29 0 30 0;
#X connect 30 0 38 0;
#X connect 30 0 45 0;
#X connect 31 0 32 0;
#X connect 32 0 5 1;
#X connect 33 0 26 0;
#X connect 33 1 14 0;
#X connect 33 2 27 0;
#X connect 33 3 29 0;
#X connect 34 0 5 0;
#X connect 34 1 20 0;
#X connect 34 2 6 1;
#X connect 34 3 31 1;
#X connect 35 0 1 0;
#X connect 39 0 32 1;
#X restore 211 281 pd clocker;
#X obj 420 461 outlet;
#X obj 323 464 outlet;
#X obj 584 63 inlet;
#X text 624 63 length;
#X obj 75 42 inlet;
#X obj 257 238 t b b;
#X obj 360 325 t b b;
#X obj 234 457 outlet;
#X text 180 491 seq clock out;
#X text 312 490 seq starting;
#X text 418 489 seq ended;
#X text 115 44 beat clock;
#X obj 228 50 inlet;
#X obj 284 48 inlet;
#X obj 368 46 inlet;
#X obj 502 45 inlet;
#X text 221 23 stop;
#X text 392 272 the clocker just loops forever. it sends out a bang
at the end of each loop that we can use to shut off its output if we
don't want a looping clock.;
#X connect 0 0 6 0;
#X connect 0 1 12 0;
#X connect 0 2 5 1;
#X connect 1 0 0 4;
#X connect 5 0 14 0;
#X connect 6 0 5 0;
#X connect 6 1 13 0;
#X connect 9 0 6 2;
#X connect 11 0 0 0;
#X connect 12 0 6 1;
#X connect 12 1 8 0;
#X connect 13 0 0 5;
#X connect 13 1 7 0;
#X connect 19 0 0 1;
#X connect 20 0 0 2;
#X connect 21 0 0 3;
#X connect 22 0 1 0;
#X restore 353 233 pd seq-clocker;
#X obj 390 397 print;
#X obj 69 104 s beat-clock;
#X text 484 250 bang sent out when sequence is starting and when it
ended. this can be used to rewind a reader., f 44;
#X text 521 327 most simple reader;
#X obj 682 592 text define -k seq-1;
#A set;
#X msg 682 565 clear;
#X obj 681 528 text set seq-1;
#X msg 708 493 1e+06;
#X obj 681 468 t a b;
#X msg 681 440 0 len 4;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 2 0 22 1;
#X connect 3 0 26 5;
#X connect 4 0 22 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 7 0 28 0;
#X connect 8 0 9 0;
#X connect 10 0 26 4;
#X connect 11 0 20 0;
#X connect 12 0 26 1;
#X connect 13 0 26 2;
#X connect 14 0 26 3;
#X connect 19 0 7 0;
#X connect 20 0 0 0;
#X connect 20 1 26 0;
#X connect 21 0 27 0;
#X connect 22 0 23 0;
#X connect 24 0 7 0;
#X connect 25 0 7 0;
#X connect 26 0 1 0;
#X connect 26 0 21 0;
#X connect 26 1 21 1;
#X connect 26 2 21 1;
#X connect 32 0 31 0;
#X connect 34 0 33 1;
#X connect 35 0 33 0;
#X connect 35 1 34 0;
#X connect 36 0 35 0;
